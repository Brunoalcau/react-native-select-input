// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectInput renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "zIndex": 1,
      },
      null,
    ]
  }
>
  <TouchableWithoutFeedback
    onPress={[Function]}
  >
    <View
      style={
        Array [
          Object {
            "borderBottomColor": "#D9D9D9",
            "borderBottomWidth": 1,
            "flex": 1,
            "marginBottom": 28,
            "paddingVertical": 10,
          },
          false,
          null,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#9C9C9C",
              "fontSize": 14,
            },
            false,
            null,
          ]
        }
      >
        label
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#545454",
                "fontSize": 14,
                "marginRight": 15,
                "paddingTop": 9,
              },
              false,
              null,
            ]
          }
        >
          First value
        </Text>
        <Icon
          disabled={false}
          loading={false}
          renderArrowIcon={null}
          style={null}
          tintColor="#545454"
          type="DOWN"
        />
      </View>
    </View>
  </TouchableWithoutFeedback>
  <Picker
    arrowIcon={null}
    colors={
      Object {
        "dark": "#545454",
        "light": "#D9D9D9",
        "normal": "#9C9C9C",
      }
    }
    done="Done"
    doneStyle={null}
    labelStyle={null}
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "First value",
          "value": "first-value",
        },
        Object {
          "label": "Second value",
          "value": "second-value",
        },
      ]
    }
    placeholder="Select a value"
    renderLabel={null}
    testProperty={null}
    toggleShowOptions={[Function]}
    value="first-value"
    valueStyle={null}
    visible={false}
  />
</View>
`;

exports[`SelectInput renders correctly with a testProperty set 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "zIndex": 1,
      },
      null,
    ]
  }
>
  <TouchableWithoutFeedback
    onPress={[Function]}
    testID="select-foo"
  >
    <View
      style={
        Array [
          Object {
            "borderBottomColor": "#D9D9D9",
            "borderBottomWidth": 1,
            "flex": 1,
            "marginBottom": 28,
            "paddingVertical": 10,
          },
          false,
          null,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#9C9C9C",
              "fontSize": 14,
            },
            false,
            null,
          ]
        }
      >
        label
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#545454",
                "fontSize": 14,
                "marginRight": 15,
                "paddingTop": 9,
              },
              false,
              null,
            ]
          }
        >
          First value
        </Text>
        <Icon
          disabled={false}
          loading={false}
          renderArrowIcon={null}
          style={null}
          tintColor="#545454"
          type="DOWN"
        />
      </View>
    </View>
  </TouchableWithoutFeedback>
  <Picker
    arrowIcon={null}
    colors={
      Object {
        "dark": "#545454",
        "light": "#D9D9D9",
        "normal": "#9C9C9C",
      }
    }
    done="Done"
    doneStyle={null}
    labelStyle={null}
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "First value",
          "value": "first-value",
        },
        Object {
          "label": "Second value",
          "value": "second-value",
        },
      ]
    }
    placeholder="Select a value"
    renderLabel={null}
    testProperty="foo"
    toggleShowOptions={[Function]}
    value="first-value"
    valueStyle={null}
    visible={false}
  />
</View>
`;

exports[`SelectInput renders correctly with different style 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "zIndex": 1,
      },
      null,
    ]
  }
>
  <TouchableWithoutFeedback
    onPress={[Function]}
  >
    <View
      style={
        Array [
          Object {
            "borderBottomColor": "#D9D9D9",
            "borderBottomWidth": 1,
            "flex": 1,
            "marginBottom": 28,
            "paddingVertical": 10,
          },
          false,
          null,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#9C9C9C",
              "fontSize": 14,
            },
            false,
            null,
          ]
        }
      >
        label
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#545454",
                "fontSize": 14,
                "marginRight": 15,
                "paddingTop": 9,
              },
              false,
              null,
            ]
          }
        >
          First value
        </Text>
        <Icon
          disabled={false}
          loading={false}
          renderArrowIcon={null}
          style={null}
          tintColor="#545454"
          type="DOWN"
        />
      </View>
    </View>
  </TouchableWithoutFeedback>
  <Picker
    arrowIcon={null}
    colors={
      Object {
        "dark": "#545454",
        "light": "#D9D9D9",
        "normal": "#9C9C9C",
      }
    }
    done="Done"
    doneStyle={null}
    labelStyle={null}
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "First value",
          "value": "first-value",
        },
        Object {
          "label": "Second value",
          "value": "second-value",
        },
      ]
    }
    placeholder="Select a value"
    renderLabel={null}
    style={
      Object {
        "backgroundColor": "#0000FF",
      }
    }
    testProperty={null}
    toggleShowOptions={[Function]}
    value="first-value"
    valueStyle={null}
    visible={false}
  />
</View>
`;

exports[`SelectInput renders correctly with disabled state 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "zIndex": 1,
      },
      null,
    ]
  }
>
  <TouchableWithoutFeedback
    onPress={[Function]}
  >
    <View
      style={
        Array [
          Object {
            "borderBottomColor": "#D9D9D9",
            "borderBottomWidth": 1,
            "flex": 1,
            "marginBottom": 28,
            "paddingVertical": 10,
          },
          false,
          null,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#9C9C9C",
              "fontSize": 14,
            },
            Object {
              "color": "#9C9C9C",
            },
            null,
          ]
        }
      >
        label
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#545454",
                "fontSize": 14,
                "marginRight": 15,
                "paddingTop": 9,
              },
              Object {
                "color": "#9C9C9C",
              },
              null,
            ]
          }
        >
          First value
        </Text>
        <Icon
          disabled={true}
          loading={false}
          renderArrowIcon={null}
          style={null}
          tintColor="#9C9C9C"
          type="DOWN"
        />
      </View>
    </View>
  </TouchableWithoutFeedback>
</View>
`;

exports[`SelectInput renders correctly with loading state 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "zIndex": 1,
      },
      null,
    ]
  }
>
  <TouchableWithoutFeedback
    onPress={[Function]}
  >
    <View
      style={
        Array [
          Object {
            "borderBottomColor": "#D9D9D9",
            "borderBottomWidth": 1,
            "flex": 1,
            "marginBottom": 28,
            "paddingVertical": 10,
          },
          false,
          null,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#9C9C9C",
              "fontSize": 14,
            },
            Object {
              "color": "#9C9C9C",
            },
            null,
          ]
        }
      >
        label
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <View
          style={
            Object {
              "paddingTop": 9,
            }
          }
        >
          <Loading
            color="#000"
            size="small"
          />
        </View>
        <Icon
          disabled={false}
          loading={true}
          renderArrowIcon={null}
          style={null}
          tintColor="#9C9C9C"
          type="DOWN"
        />
      </View>
    </View>
  </TouchableWithoutFeedback>
</View>
`;
